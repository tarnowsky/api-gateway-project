http:
  port: 8080
admin:
  port: 9876
  host: localhost
apiEndpoints:
  users:
    host: localhost
    paths: '/users/*'
  products:
    host: localhost
    paths: '/products/*'
  orders:
    host: localhost
    paths: '/orders/*'
serviceEndpoints:
  userService:
    url: 'http://user-service:3001'
  productService:
    url: 'http://product-service:3002'
  orderService:
    url: 'http://order-service:3003'
policies:
  - cors
  - jwt
  - log
  - proxy
  - rate-limit
pipelines:
  users:
    apiEndpoints:
      - users
    policies:
      - log:
          action:
            message: '${req.method} ${req.originalUrl}'
      - jwt:
          action:
            secretOrPublicKey: ${JWT_SECRET}
            checkCredentialExistence: false
      - proxy:
          action:
            serviceEndpoint: userService
  products:
    apiEndpoints:
      - products
    policies:
      - log:
          action:
            message: '${req.method} ${req.originalUrl}'
      - jwt:
          action:
            secretOrPublicKey: ${JWT_SECRET}
            checkCredentialExistence: false
      - proxy:
          action:
            serviceEndpoint: productService
  orders:
    apiEndpoints:
      - orders
    policies:
      - log:
          action:
            message: '${req.method} ${req.originalUrl}'
      - jwt:
          action:
            secretOrPublicKey: ${JWT_SECRET}
            checkCredentialExistence: false
      - proxy:
          action:
            serviceEndpoint: orderService